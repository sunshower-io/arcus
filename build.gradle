plugins {
    id 'pmd'
    id 'groovy'
    id 'java-library'
    id "com.github.spotbugs" version "4.7.1"
    id "io.freefair.lombok" version "6.0.0-m2"
    id "com.diffplug.spotless" version "5.12.5"
    id "io.spring.dependency-management" version "1.0.11.RELEASE"
}

apply from: "$rootDir/tasks/revisions.gradle"

allprojects {
    apply plugin: 'java'
    apply plugin: 'maven-publish'
    apply plugin: 'io.spring.dependency-management'

    repositories {
        jcenter()
        mavenLocal()
        mavenCentral()


        maven {
            url "https://maven.pkg.github.com/sunshower-io/sunshower-env"
            credentials {
                username "$mavenRepositoryUsername"
                password "$mavenRepositoryPassword"
            }
        }
    }


    dependencyManagement {
        imports {
            mavenBom "io.sunshower.arcus:bom-imported:$version"
        }
    }


}

subprojects {
    apply plugin: 'pmd'
    apply plugin: 'java'
    apply plugin: 'groovy'
    apply plugin: 'java-library'
    apply plugin: 'io.freefair.lombok'
    apply plugin: "com.github.spotbugs"
    apply plugin: "com.diffplug.spotless"

    lombok {
        version = '1.18.20'
    }
    spotbugsMain {
        reports {
            html {
                enabled = true
            }
        }
    }

    spotbugsTest {
        enabled = false
    }

    pmd {
        toolVersion = '6.34.0'
        sourceSets = [sourceSets.main]
        ruleSets = [
                "${project.rootDir}/check/pmd/rules/errorprone.xml"
        ]
    }

    test {
        useJUnitPlatform()
    }

    spotless {
        java {
            googleJavaFormat('1.10.0')
        }
    }


    publishing {

        repositories {
            mavenLocal()

            maven {
                credentials {
                    username "$mavenRepositoryUsername"
                    password "$mavenRepositoryPassword"
                }
                url "$mavenRepositoryUrl"
            }
        }


        task testJar(type: Jar) {
            archiveClassifier = 'tests'
            from sourceSets.test.output
        }

        task javadocJar(type: Jar) {
            from javadoc
            archiveClassifier = 'javadoc'
        }



        publications {
            mavenPlugin(MavenPublication) {
                /**
                 * components source
                 */
                from components.java

                /**
                 * maven coordinates
                 */
                groupId = project.group
                artifactId = project.name
                version = project.version

                /**
                 * included artifacts
                 */

                artifact testJar
                artifact javadocJar

                versionMapping {
                    usage('java-api') {
                        fromResolutionOf('runtimeClasspath')
                    }
                    usage('java-runtime') {
                        fromResolutionResult()
                    }
                }
            }
        }
    }


    dependencies {


        testImplementation 'org.spockframework:spock-core'
        testImplementation 'org.junit-pioneer:junit-pioneer'
        testImplementation 'org.junit.platform:junit-platform-suite-engine'
        [
                'api',
                'engine'

        ].each { dep ->
            testImplementation "org.junit.jupiter:junit-jupiter-$dep"
        }
    }
}


defaultTasks(
        'clean',
        'build',
        'spotlessApply'
)

dependencies {
    implementation 'org.junit.jupiter:junit-jupiter:5.4.2'
}

